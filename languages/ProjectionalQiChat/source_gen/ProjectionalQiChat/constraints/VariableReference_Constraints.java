package ProjectionalQiChat.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseScopeProvider;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import java.util.Collections;
import ProjectionalQiChat.behavior.Topic__BehaviorDescriptor;
import ProjectionalQiChat.behavior.ConceptCollection__BehaviorDescriptor;
import jetbrains.mps.scope.ListScope;
import ProjectionalQiChat.behavior.VariableDeclarationContainer__BehaviorDescriptor;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;

public class VariableReference_Constraints extends BaseConstraintsDescriptor {
  public VariableReference_Constraints() {
    super(CONCEPTS.VariableReference$SN);
  }

  @Override
  protected Map<SReferenceLink, ReferenceConstraintsDescriptor> getSpecifiedReferences() {
    BaseReferenceConstraintsDescriptor d0 = new BaseReferenceConstraintsDescriptor(LINKS.variable$oicI, this, true, false) {
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return new SNodePointer("r:0732640b-7693-4dcb-8a72-67b764f4b543(ProjectionalQiChat.constraints)", "3164244237119550233");
          }
          @Override
          public Scope createScope(final ReferenceConstraintsContext _context) {
            SNode parentTopic = SNodeOperations.getNodeAncestor(_context.getContextNode(), CONCEPTS.Topic$xv, false, false);
            SNode parentCollection = SNodeOperations.getNodeAncestor(_context.getContextNode(), CONCEPTS.ConceptCollection$S7, false, false);
            Iterable<SNode> allVariableOfTopParent = Sequence.fromIterable(Collections.<SNode>emptyList());
            if ((parentTopic != null)) {
              allVariableOfTopParent = Topic__BehaviorDescriptor.getVariables_id2JDDPTC5E6Z.invoke(parentTopic);
            } else if ((parentCollection != null)) {
              allVariableOfTopParent = ConceptCollection__BehaviorDescriptor.getVariables_id2JDDPTCcSUJ.invoke(parentCollection);
            }
            SNode parent = SNodeOperations.getNodeAncestor(_context.getContextNode(), CONCEPTS.VariableDeclarationContainer$Zf, false, false);
            return ListScope.forNamedElements(Sequence.fromIterable(allVariableOfTopParent).subtract(Sequence.fromIterable(VariableDeclarationContainer__BehaviorDescriptor.getVariables_id2JDDPTCebYp.invoke(parent))));
          }
        };
      }
    };
    Map<SReferenceLink, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLink, ReferenceConstraintsDescriptor>();
    references.put(d0.getReference(), d0);
    return references;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept VariableReference$SN = MetaAdapterFactory.getConcept(0x9f283760f9ca4f5bL, 0x8990d42851344ce7L, 0x6fd223061c49b170L, "ProjectionalQiChat.structure.VariableReference");
    /*package*/ static final SConcept Topic$xv = MetaAdapterFactory.getConcept(0x9f283760f9ca4f5bL, 0x8990d42851344ce7L, 0x6fd223061c487b95L, "ProjectionalQiChat.structure.Topic");
    /*package*/ static final SConcept ConceptCollection$S7 = MetaAdapterFactory.getConcept(0x9f283760f9ca4f5bL, 0x8990d42851344ce7L, 0x6fd223061c49b032L, "ProjectionalQiChat.structure.ConceptCollection");
    /*package*/ static final SInterfaceConcept VariableDeclarationContainer$Zf = MetaAdapterFactory.getInterfaceConcept(0x9f283760f9ca4f5bL, 0x8990d42851344ce7L, 0x2be9a75e6838bf73L, "ProjectionalQiChat.structure.VariableDeclarationContainer");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink variable$oicI = MetaAdapterFactory.getReferenceLink(0x9f283760f9ca4f5bL, 0x8990d42851344ce7L, 0x6fd223061c49b170L, 0x4d41c767d8337becL, "variable");
  }
}
